name: Android CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.gitignore'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.gitignore'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Install ccache
      run: |
        sudo apt install -y ccache ninja-build
        ccache -o max_size=1G
        ccache -o hash_dir=false
        ccache -o hard_link=true
        ccache -o compiler_check='%compiler% -dumpmachine; %compiler% -dumpversion'
        ccache -zp
    - name: Cache Native Build
      uses: actions/cache@v4.1.1
      with:
        path: |
          ~/.cache/ccache
          ~/.ccache
          app/build/.lto-cache
        key: native-cache-${{ github.sha }}
        restore-keys: native-cache-
    - name: Build with Gradle
      run: | 
        ./gradlew assembleRelease
        echo "APK_FILE_ARMEABI=$(find app/build/outputs/apk/release -name 'OPatch_armeabi-v7a_v*.apk')" >> $GITHUB_ENV
        echo "APK_FILE_ARM64=$(find app/build/outputs/apk/release -name 'OPatch_arm64-v8a_v*.apk')" >> $GITHUB_ENV
        echo "APK_FILE_ARMALL=$(find app/build/outputs/apk/release -name 'OPatch_all_v*.apk')" >> $GITHUB_ENV
        echo "APK_FILE_METADATA=$(find app/build/outputs/apk/release -name 'output-metadata.json')" >> $GITHUB_ENV

    - name: Show Artifacts SHA256
      run: |
        echo "### Build Success :rocket:" >> $GITHUB_STEP_SUMMARY
        echo "|ABI|SHA256|" >> $GITHUB_STEP_SUMMARY
        echo "|:--------:|:----------|" >> $GITHUB_STEP_SUMMARY
        armeabi=$(sha256sum "${{ env.APK_FILE_ARMEABI }}")
        echo "armeabi=${armeabi%% *}" >> $GITHUB_ENV  # Export to environment variable
        echo "|armeabi|${armeabi%% *}|" >> $GITHUB_STEP_SUMMARY
        arm64=$(sha256sum "${{ env.APK_FILE_ARM64 }}")
        echo "arm64=${arm64%% *}" >> $GITHUB_ENV  # Export to environment variable
        echo "|arm64|${arm64%% *}|" >> $GITHUB_STEP_SUMMARY
        armAll=$(sha256sum "${{ env.APK_FILE_ARMALL }}")
        echo "armAll=${armAll%% *}" >> $GITHUB_ENV  # Export to environment variable
        echo "|armAll|${armAll%% *}|" >> $GITHUB_STEP_SUMMARY
        metadata=$(sha256sum "${{ env.APK_FILE_METADATA }}")
        echo "metadata=${metadata%% *}" >> $GITHUB_ENV  # Export to environment variable
        echo "|metadata|${metadata%% *}|" >> $GITHUB_STEP_SUMMARY

    - name: Upload All APK
      uses: actions/upload-artifact@v4
      with:
        name: OPatch_all_${{ github.event.head_commit.id }}
        path: ${{ env.APK_FILE_ARMALL }}

    - name: Upload Arm64 APK
      uses: actions/upload-artifact@v4
      with:
        name: OPatch_arm64-v8a_${{ github.event.head_commit.id }}
        path: ${{ env.APK_FILE_ARM64 }}

    - name: Upload Armeabi APK
      uses: actions/upload-artifact@v4
      with:
        name: OPatch_armeabi-v7a_${{ github.event.head_commit.id }}
        path: ${{ env.APK_FILE_ARMEABI }}

    - name: Upload Metadata
      uses: actions/upload-artifact@v4
      with:
        name: output-metadata
        path: ${{ env.APK_FILE_METADATA }}
    - name: Upload To Telegram Release
      env:
        COMMIT_MESSAGE: |+
          🚀 **GitHub 新推送来了！**  
          
          *👤 作者*：`${{ github.event.head_commit.author.name }}`
          *🕒 提交时间*：`${{ github.event.head_commit.timestamp }}`
          *📦 仓库*：`${{ github.repository }}`
          *🔢 提交 SHA*：`${{ github.event.head_commit.id }}`
          *🔍 分支*：`${{ github.ref }}`
          
          *🥳ABI 和 SHA256 列表：*
          🧐 armeabi:`${{ env.armeabi }}`
          🐼 arm64:`${{ env.arm64 }}`
          🤩 armAll:`${{ env.armAll }}`
          😶‍🌫️ metadata:`${{ env.metadata }}`
          
          *📄 提交信息 📄*
          ```
          ${{ github.event.head_commit.message }}
          ```
          🔗 **查看详情**：[点我看具体内容](${{ github.event.head_commit.url }})
        COMMIT_URL: ${{ github.event.head_commit.url }}
      run: |
        ESCAPED=`python3 -c 'import json,os,re,urllib.parse; msg = json.dumps(re.sub(r"([\-\.])", r"\\\1", os.environ["COMMIT_MESSAGE"]+os.environ["COMMIT_URL"])); print(urllib.parse.quote(msg, safe=""))'`
        echo "COMMIT_MESSAGE: $ESCAPED"
        curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN  }}/sendMediaGroup?chat_id=-1002477655219&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Farmeabi%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Farm64%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2FarmAll%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fmetadata%22%2C%20%22parse_mode%22%3A%22MarkdownV2%22%2C%20%22caption%22%3A${ESCAPED}%7D%5D%0A" \
         -F armeabi="@${{ env.APK_FILE_ARMEABI }}" \
         -F arm64="@${{ env.APK_FILE_ARM64 }}" \
         -F armAll="@${{ env.APK_FILE_ARMALL }}" \
         -F metadata="@${{ env.APK_FILE_METADATA }}"
